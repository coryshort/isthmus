#!/bin/bash
# Original code by Dave Coyle (http://coyled.com)
# Tweaks by Gwyneth Llewelyn (http://gwynethllewelyn.net/)
# Additional code by Lotek Ixtar (http://lotix.nl)

# Requires bash 4

# Get the root folder of the isthmus tree
export OPENSIM_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
REGIONS_DIR="${OPENSIM_DIR}/etc/regions"
OAR_PATH="${OPENSIM_DIR}/var/backup"
OAR_OPTIONS=

# Second Life time is the US/Pacific-New timezone
VIEWER_TIME="US/Pacific-New"

# Mono optimizations
export MONO_GC_PARAMS="nursery-size=32m,promotion-age=14,minor=split,major=marksweep,no-lazy-sweep,alloc-ratio=50"
export MONO_GC_DEBUG=""
export MONO_ENV_OPTIONS="--desktop"
export MONO_THREADS_PER_CPU=250

MONO="/usr/bin/mono"
SCREEN="/usr/bin/screen"
GREP="/bin/grep"

show_help() {
    echo "`basename $0` - Control opensim simulators\n\n"
    echo "start <simname>     Start a simulator"
    echo "stop <simname>      Stop and deregister from the map"
    echo "kill <simname>      Stop by sending SIGHUP (unclean)"
    echo "alert <simname> \"This is an alert message\"    Send an inworld alert msg"
    echo "restart <simname>   Issues a stop, then start command"
    echo "status <simname>    Returns online status"
    echo "backup <simname>    Ensure database is saved"
    echo "saveoar <simname>    Saves regions in sim to an .oar bundle"
}

check_user() {
    if [ `whoami` == 'root' ]; then
        echo "Refusing to run as root"
        exit 1
    fi
}

is_sim() {
    if [ -r "${REGIONS_DIR}/$1.ini" ]; then
        return 0
    else
        return 1
    fi
}

is_running() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    SCREENRET=`${SCREEN} -ls ${SIM}`
    if [[ ${SCREENRET} == "No Sockets"* ]]; then
        return 1
    else
        return 0
    fi
}

get_status() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    if is_sim ${SIM}; then
        if is_running ${SIM}; then
            echo "[${SIM}] is online"
            exit 1
        else
            echo "[${SIM}] is offline"
            exit 0 
        fi
    else
        echo "[${SIM}] does not exist"
        exit -1
    fi
}

setup() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    if is_sim ${SIM}; then
        # SIM_LOG_FILE is used by log4net (OpenSim.exe.config) for sim logs
        mkdir -p "${OPENSIM_DIR}/var/log"
        export SIM_LOG_FILE="${OPENSIM_DIR}/var/log/${SIM}.log"
        mkdir -p "${OPENSIM_DIR}/var/pid"
        PID="${OPENSIM_DIR}/var/pid/${SIM}.pid"
    else
        echo "Sorry, I've never heard of sim ${SIM}.  Exiting."
        exit 1;
    fi

    mkdir -p "${OPENSIM_DIR}/var/ports_sim"
    for port in {9000..9100..1}
    do
        if [ ! -f "${OPENSIM_DIR}/var/ports_sim/${port}" ]; then
            PORT_SIM=${port}
            break;
        fi
    done
}

do_start() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    if is_running ${SIM}; then
        echo "[${SIM}] Already started"
        exit 1
    fi

    setup ${SIM}
    check_user

    # Avoid snapshot sharing violation (probably needs to be Mantis'ed)
    SNAPDIR="${OPENSIM_DIR}/var/DataSnapshot"
    if [ -f "${SNAPDIR}/${SIM}.xml" ]; then
        rm "${SNAPDIR}/${SIM}.xml"
    fi
    if [ -f "${SNAPDIR}/${SIM}_ObjectSnapshot.xml" ]; then
        rm "${SNAPDIR}/${SIM}_ObjectSnapshot.xml"
    fi
    if [ -f "${SNAPDIR}/${SIM}_EstateSnapshot.xml" ]; then
        rm "${SNAPDIR}/${SIM}_EstateSnapshot.xml"
    fi
    if [ -f "${SNAPDIR}/${SIM}_LandSnapshot.xml" ]; then
        rm "${SNAPDIR}/${SIM}_LandSnapshot.xml"
    fi

    # Make sure opensim.exe runs in the SLT time zone:
    export TZ=${VIEWER_TIME}
    export LANG=C
    ulimit -s 262144
    echo "${SIM}" > "${OPENSIM_DIR}/var/ports_sim/${PORT_SIM}"
    cd "${OPENSIM_DIR}/runtime/bin" && ${SCREEN} -S ${SIM} -d -m -l \
	${MONO} --debug OpenSim.exe \
            -inifile="${OPENSIM_DIR}/etc/opensim.ini" \
            -http_listener_port=${PORT_SIM} \
            -pidfile="${PID}" \
            -regionload_regionfile="${REGIONS_DIR}/${SIM}.ini"

    sleep 3
    if ! is_running ${SIM}; then
        rm "${OPENSIM_DIR}/var/ports_sim/${PORT_SIM}"
        echo "[${SIM}] Failed to start"
        exit 1
    else
        echo "[${SIM}] Started"
    fi
}

do_kill() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    setup ${SIM}
    check_user

    if is_running ${SIM}; then
        # Send backup command and wait 1 minute
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nbackup"
        sleep 60
        if [ -f ${PID} ]; then
            kill -9 `cat ${PID}`
            rm ${PID}
	    for port in {9000..9100..1}
	    do
		if [ -f "${OPENSIM_DIR}/var/ports_sim/${port}" ]; then
                    if [ `cat "${OPEN_DIR}/var/ports_sim/${port}"` == "${SIM}" ]; then
                        rm "${OPENSIM_DIR}/var/ports_sim/${port}"
                        echo "[${SIM}] Killed"
                        exit 0
                    fi
		fi
	    done
        fi
    fi
}

do_stop() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    setup ${SIM}
    check_user

    if is_running ${SIM}; then
        echo -n "[${SIM}] Stopping"
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nquit"
	for port in {9000..9100..1}
	do
	    if [ -f "${OPENSIM_DIR}/var/ports_sim/${port}" ]; then
                contents=`cat "${OPENSIM_DIR}/var/ports_sim/${port}"`
                if [ "${contents}" == "${SIM}" ]; then
                    STOPTIME=0
                    while :
                    do
                        sleep 5
                        STOPTIME=$((STOPTIME + 5))
                        echo -n "."
                        if ! is_running ${SIM}; then
                            echo " stopped"
                            rm "${OPENSIM_DIR}/var/ports_sim/${port}"
                            exit 0
                        elif [ ${STOPTIME} -ge 120 ]; then
                            echo " killing"
                            do_kill ${SIM}
                            exit 1
                        fi
                    done
                fi
            fi
	done
    else
        echo "[${SIM}] Not running"
        exit 1
    fi 
}

do_alert() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    setup ${SIM}
    check_user

    if is_running ${SIM}; then
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nalert $2"
    else
        echo "${SIM} not running"
    fi
}

do_backup() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    setup ${SIM}
    check_user

    if is_running ${SIM}; then
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nbackup"
    else
        echo "${SIM} not running"
    fi
}

do_audit() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    if is_sim ${SIM}; then
        for port in {9000..9100..1}
        do
            contents=`cat "${OPENSIM_DIR}/var/ports_sim/${port}"`
            if [ "${contents}" == "${SIM}" ]; then
                simport=${port}
                break;
            fi
        done
        echo -e "${simport}\tTCP\t${SIM}"
        # Todo: region ports
        #for INIFILE in ${SIMS_AVAILABLE}/${SIM}/regions/*.ini ; do
        #    SECTION=`head -n 1 ${INIFILE}`
        #    REGION="${SECTION:1: -1}"
        #    REGIONPORT=`${GREP} InternalPort ${INIFILE} | ${GREP} -ho '[0-9]*'`
        #    echo -e "${REGIONPORT}\tUDP\t${SIM} - ${REGION}"
        #done
#        echo "\n"
    fi
}


# do_saveoar simname (oarpath)
# Saves oars for all regions in simulator
# If no oarpath specified, use default var/backup/yyyy-mm-dd
do_saveoar() {
    if [ ! $1 ]; then
        show_help
        exit 1
    else
        SIM=$1
    fi

    setup ${SIM}
    check_user

    if [ ! $3 ]; then
        LOCAL_OAR_PATH="${OAR_PATH}/`date -I'date'`"
    else
        LOCAL_OAR_PATH=$3 
    fi

    mkdir -p "${LOCAL_OAR_PATH}"

    if is_running ${SIM}; then
        # Alert inworld about temporary degraded performance"
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nalert \"SYSTEM NOTICE: Region backup in progress. Performance might be a bit slower for a few minutes..\""
        sleep 3

        # Following would save all regions in one oar: 
        OAR_FILE="${LOCAL_OAR_PATH}/${SIM}-`date -I'date'`.oar"
        ${SCREEN} -r ${SIM} -X exec .\!\! echo "\nsave oar ${OAR_OPTIONS} --all \"${OAR_FILE}\""
    fi
}

case "$1" in
    start)
        do_start $2
        ;; 
    stop)
        do_stop $2
        ;;
    kill)
        do_kill $2
        ;;
    alert)
        do_alert $2 "$3"
        ;;
    restart)
        do_stop $2
        do_start $2
        ;;
    status)
        get_status $2
        ;;
    audit)
        do_audit $2
        ;;
    saveoar)
        do_saveoar $2
        ;;
    backup)
        do_backup $2
        ;;
    *)
        show_help
        exit 1
        ;;
esac


#!/bin/bash
# Run a batched simctl command for all simulators in sims-enabled

OPENSIM_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

SIMCTL="${OPENSIM_DIR}/bin/simctl"
SCREEN="/usr/bin/screen"
GREP="/bin/grep"

mkdir -p "${OPENSIM_DIR}/var"

# We create this lock file when needing to suspend the watchdog
SIMAUTO_LOCK="${OPENSIM_DIR}/var/simauto.lock"

# Seconds delay between inworld alert and actual shutdown
ALERT_DELAY=120

# Seconds delay after stopping (for a clean shutdown)
STOP_DELAY=60

# Seconds delay after starting (to space out multiple sims starting)
START_DELAY=120

# Inworld warnings users get to see $ALERT_DELAY seconds before stopping or
# restarts. Note that you CAN'T use special characters such as \n (newline)
MSG_REGION_RESTART="ATTENTION: REGION RESTART - This region will be restarting within ${ALERT_DELAY} seconds. Please teleport elsewhere until we are back..."
MSG_REGION_STOP="ATTENTION: REGION MAINTENANCE - This region will be going down for maintenance within ${ALERT_DELAY} seconds. Please teleport elsewhere until we are back..."

show_help() {
    echo "Usage: `basename $0` [ start | stop | restart | reload | status | audit ]"
    echo "Starts or stops all simulators in ${OPENSIM_DIR}/etc/regions"
}

is_running() {
    SIM=$1

    SCREENPID=`${SCREEN} -ls ${SIM} | grep -P "${SIM}\t" | cut -f1 -d'.' | sed 's/W//g'`
    if [ "${SCREENPID}" != "" ]; then
        return 0
    else
        return 1
    fi
}

is_enabled() {
    SIM=$1

    if [ -f "${OPENSIM_DIR}/etc/regions/${SIM}.ini" ] && [ -r "${OPENSIM_DIR}/etc/regions/${SIM}.ini" ]; then
        return 0
    elif [ -d "${OPENSIM_DIR}/etc/regions/${SIM}" ] && [ -x "${OPENSIM_DIR}/etc/regions/${SIM}" ]; then
        return 0
    else
        return 1
    fi
}

do_start() {
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_enabled ${simname} && ! is_running ${simname}; then
            ${SIMCTL} start ${simname}
            sleep ${START_DELAY}
        fi
    done;
    echo "All sims have started."
}

do_stop() {
    # Phase 1: Alert
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_running ${simname}; then
            echo "[${simname}] Sending inworld alert"
            ${SIMCTL} alert ${simname} "${MSG_REGION_STOP}"
            sleep 2
            ${SIMCTL} backup ${simname}
        fi
    done;
    echo "Pausing (${ALERT_DELAY}s) before stopping"
    sleep ${ALERT_DELAY}
    # Phase 2: Stop
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_running ${simname}; then
            ${SIMCTL} stop ${simname}
        elif is_enabled ${simname}; then
            echo "[${simname}] Already offline"
        fi
    done;
    echo "All sims have stopped."
}

do_restart() {
    # Phase 1: Alert
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_running ${simname}; then
            echo "[${simname}] Alerting (${ALERT_DELAY}s)"
            ${SIMCTL} alert ${simname} "${MSG_REGION_RESTART}"
            sleep 2
            ${SIMCTL} backup ${simname}
        fi
    done;
    echo "Pausing (${ALERT_DELAY}s) before stopping sims"
    sleep ${ALERT_DELAY}
    # Phase 2: Stop
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_running ${simname}; then
            ${SIMCTL} stop ${simname}
        fi
    done;
    echo "All sims have been stopped"
    #echo "Pausing (${STOP_DELAY}s) before starting sims"
    #sleep ${STOP_DELAY}
    # Phase 3: Start
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_enabled ${simname}; then
            ${SIMCTL} start ${simname}
            sleep ${START_DELAY}
        fi
    done;
    echo "All sims have been started."
}

do_reload() {
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        if is_running ${simname}; then
            # Alert
            echo "[${simname}] Alerting (${ALERT_DELAY}s)"
            ${SIMCTL} alert ${simname} "${MSG_REGION_RESTART}"
            sleep 2
            ${SIMCTL} backup ${simname}
            sleep ${ALERT_DELAY}
            # Stop
            ${SIMCTL} stop ${simname}
        fi
        # Start if simulator enabled
        if is_enabled ${simname}; then
            ${SIMCTL} start ${simname}
            sleep ${START_DELAY}
        fi
    done;
    echo "All sims have been reloaded."
}

do_batch() {
    for simulator in ${OPENSIM_DIR}/etc/regions/*; do
        simname=`basename ${simulator} .ini`
        ${SIMCTL} $1 ${simname}
    done;
}

case "$1" in
    start)
        touch "${SIMAUTO_LOCK}"
        echo "Starting all sims delayed"
        do_start
        rm ${SIMAUTO_LOCK}
        ;;
    stop)
        touch "${SIMAUTO_LOCK}"
        echo "Stopping all sims"
        do_stop
        # Deliberately don't remove lock
        ;;
    restart)
        touch "${SIMAUTO_LOCK}"
        echo "Restarting all sims delayed"
        time do_restart
        rm ${SIMAUTO_LOCK}
        ;;
    reload)
        touch "${SIMAUTO_LOCK}"
        echo "Reloading all sims delayed"
        time do_reload
        rm ${SIMAUTO_LOCK}
        ;;
    status)
        do_batch $1
        ;;
    audit)
        do_batch $1
        ;;
    saveoar)
        do_batch $1
        ;;
    *)
        show_help
        exit 1
        ;;
esac

